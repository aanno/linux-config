variant: fcos
version: 1.6.0
boot_device:
  luks:
    # using tpm2 hinders a second ignition
    tpm2: false
    discard: true
passwd:
  users:
    - name: core
      # password_hash: $6$sk8W$GyFsy5z0g51.4Z0AzMX9rQY1Jyep5Q43q1yKGR3kQGxWlejat6ITgA6azd2Z/eZ8MG38gkmk3gQXz912MBGrs0
      ssh_authorized_keys_local:
        - id_ed25519.pub
    - name: tpasch
      # password_hash: $6$skjWSkjs982kj2$yrsYzN1AArd06/46ZKIHIkeinGl2olsSTb41k7LNENMIywVHePcVCzgSe/flXhgHj7uY/rZgqgLzgx0Ob7vVq/
      ssh_authorized_keys_local:
        - id_ed25519.pub
    - name: xpasch
      ssh_authorized_keys_local:
        - id_ed25519.pub
# allow passwd login
# https://discussion.fedoraproject.org/t/best-way-to-enable-password-auth-on-ssh/17731/4
# minutely, hourly, daily, monthly,
# weekly, yearly, quarterly, semiannually
# *-*-* *:*:00, *-*-* *:00:00, *-*-* 00:00:00, *-*-01 00:00:00,
# Mon *-*-* 00:00:00, *-01-01 00:00:00, *-01,04,07,10-01 00:00:00, *-01,07-01 00:00:00
systemd:
  units:
    # - name: sshd.service
    #   dropins:
    #   - name: allowpasswordauth.conf
    #     contents: |
    #       [Service]
    #       Environment=OPTIONS='-oPasswordAuthentication=yes'
    - name: wg-quick@wg0.service
      enabled: true
    - name: onstart.service
      enabled: false
      contents: |
        [Unit]
        Description=core@onstart
        After=network-online.target
        Wants=network-online.target

        [Service]
        User=core
        TimeoutStartSec=0
        ExecStart=/bin/sh /var/home/core/cron/onstart.sh
    - name: daily.service
      enabled: false
      contents: |
        [Unit]
        Description=core@daily
        After=network-online.target
        Wants=network-online.target

        [Service]
        User=core
        TimeoutStartSec=0
        ExecStart=/bin/sh /var/home/core/cron/daily.sh
    - name: weekly.service
      enabled: false
      contents: |
        [Unit]
        Description=core@weekly
        After=network-online.target
        Wants=network-online.target

        [Service]
        User=core
        TimeoutStartSec=0
        ExecStart=/bin/sh /var/home/core/cron/weekly.sh
    - name: onstart.timer
      enabled: true
      contents: |
        [Unit]
        Description=timer@core@onstart

        [Timer]
        OnStartupSec=3
        # AccuracySec=5m
        # RandomizedDelaySec=60
        RemainAfterElapse=true

        [Install]
        WantedBy=timers.target
    - name: daily.timer
      enabled: true
      contents: |
        [Unit]
        Description=timer@core@daily

        [Timer]
        OnCalendar=*-*-* 02:30:00
        # fake
        # OnCalendar=*-*-* *:*:00
        AccuracySec=60
        RandomizedDelaySec=360
        RemainAfterElapse=true

        [Install]
        WantedBy=timers.target
    - name: weekly.timer
      enabled: true
      contents: |
        [Unit]
        Description=timer@core@weekly

        [Timer]
        OnCalendar=Mon *-*-* 03:30:00
        # fake
        # OnCalendar=*-*-* *:*:30
        AccuracySec=60
        RandomizedDelaySec=360
        RemainAfterElapse=true

        [Install]
        WantedBy=timers.target
storage:
  files:
    # luks also creates some files in /etc/luks
    # don't try to enable a second ignition with:
    #- path: /etc/luks/luks-backup
    #  overwrite: true
    #  contents:
    #    inline: ''
    #- path: /etc/luks/luks-var
    #  overwrite: true
    #  contents:
    #    inline: ''
    - path: /etc/vconsole.conf
      mode: 0644
      overwrite: true
      contents:
        inline: KEYMAP=de
    - path: /etc/NetworkManager/system-connections/enp1s0.nmconnection
      mode: 0600
      overwrite: true
      contents:
        inline: |
          [connection]
          id=${NET_DEV}
          type=ethernet
          interface-name=${NET_DEV}
          [ipv4]
          dns-search=
          method=auto
          [ipv6]
          # see https://developer.gnome.org/NetworkManager/stable/settings-ipv6.html
          # dns=fd00::3681:c4ff:fec9:6d8b
          dns=2a03:4000:0:1::e1e6
          # gateway=2001:470:26:ba5:3681:c4ff:fec9:6d8b
          # gateway=fd00::3681:c4ff:fec9:6d8b
          gateway=fe80::1
          addr-gen-mode=eui64
          # addr-gen-mode=stable-privacy
          address1=2a03:4000:53:f8b::1
          address2=2a03:4000:53:f8b::2
          address3=2a03:4000:53:f8b::3
          # address1=fe80::5054:ff:fe01:7777
          #dns-search=
          method=manual
          # method=auto
          # method=disabled
    - path: /etc/hostname
      mode: 0644
      overwrite: true
      contents:
        inline: netzgeneration
    - path: /etc/sysctl.d/10-network.conf
      mode: 0644
      overwrite: true
      contents:
        inline: |
          # allow bridge
          net.ipv4.ip_forward=1
          net.ipv4.ip_local_reserved_ports=30000-32767
          net.bridge.bridge-nf-call-iptables=1
          net.bridge.bridge-nf-call-arptables=1
          net.bridge.bridge-nf-call-ip6tables=1

          # https://serverfault.com/questions/563700/assign-ipv6-address-to-kvm-guests-on-bridge-mode
          net.ipv4.conf.all.forwarding=1
          net.ipv6.conf.default.forwarding=1

          # virsh libvirt complaining
          net.ipv6.conf.all.accept_ra=2

          # ping/imcp on podman
          # https://github.com/containers/podman/issues/2488
          net.ipv4.ping_group_range = 0 2147483647

          # let podman rootless use port 80+
          net.ipv4.ip_unprivileged_port_start=80
    - path: /etc/sysctl.d/20-vm.conf
      mode: 0644
      overwrite: true
      contents:
        inline: |
          # https://code.visualstudio.com/docs/setup/linux
          fs.inotify.max_user_watches=524288
          # https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
          vm.max_map_count=262144
    - path: /etc/security/limits.conf
      mode: 0644
      overwrite: true
      contents:
        inline: |
          # /etc/security/limits.conf
          #
          #This file sets the resource limits for the users logged in via PAM.
          #It does not affect resource limits of the system services.
          #
          #Also note that configuration files in /etc/security/limits.d directory,
          #which are read in alphabetical order, override the settings in this
          #file in case the domain is the same or more specific.
          #That means for example that setting a limit for wildcard domain here
          #can be overriden with a wildcard setting in a config file in the
          #subdirectory, but a user specific setting here can be overriden only
          #with a user specific setting in the subdirectory.
          #
          #Each line describes a limit for a user in the form:
          #
          #<domain>        <type>  <item>  <value>
          #
          #Where:
          #<domain> can be:
          #        - a user name
          #        - a group name, with @group syntax
          #        - the wildcard *, for default entry
          #        - the wildcard %, can be also used with %group syntax,
          #                 for maxlogin limit
          #
          #<type> can have the two values:
          #        - "soft" for enforcing the soft limits
          #        - "hard" for enforcing hard limits
          #
          #<item> can be one of the following:
          #        - core - limits the core file size (KB)
          #        - data - max data size (KB)
          #        - fsize - maximum filesize (KB)
          #        - memlock - max locked-in-memory address space (KB)
          #        - nofile - max number of open file descriptors
          #        - rss - max resident set size (KB)
          #        - stack - max stack size (KB)
          #        - cpu - max CPU time (MIN)
          #        - nproc - max number of processes
          #        - as - address space limit (KB)
          #        - maxlogins - max number of logins for this user
          #        - maxsyslogins - max number of logins on the system
          #        - priority - the priority to run user process with
          #        - locks - max number of file locks the user can hold
          #        - sigpending - max number of pending signals
          #        - msgqueue - max memory used by POSIX message queues (bytes)
          #        - nice - max nice priority allowed to raise to values: [-20, 19]
          #        - rtprio - max realtime priority
          #
          #<domain>      <type>  <item>         <value>
          #

          #*               soft    core            0
          #*               hard    rss             10000
          #@student        hard    nproc           20
          #@faculty        soft    nproc           20
          #@faculty        hard    nproc           50
          #ftp             hard    nproc           0
          #@student        -       maxlogins       4

          # https://solr.apache.org/guide/8_3/taking-solr-to-production.html
          root             hard    nproc           65000
          *                hard    nproc           65000
          root             hard    nofile          65000
          *                hard    nofile          65000

          # End of file
    - path: /etc/wireguard/wg0.conf
      mode: 0600
      overwrite: true
      contents:
        inline: |
          [Interface]
          # https://simpledns.plus/private-ipv6
          Address = 192.168.159.1/24,fdab:ec02:68de:3f47::1/64
          PrivateKey = yO6VWeg9x/hEA3/e/Obfh5qWx0/s0PkGlI0GhtZ3EVs=
          ListenPort = 51820

          PostUp = iptables-nft -A FORWARD -i wg0 -j ACCEPT; iptables-nft -t nat -A POSTROUTING -o enp1s0 -j MASQUERADE; ip6tables-nft -A FORWARD -i wg0 -j ACCEPT; ip6tables-nft -t nat -A POSTROUTING -o enp1s0 -j MASQUERADE
          PostDown = iptables-nft -D FORWARD -i wg0 -j ACCEPT; iptables-nft -t nat -D POSTROUTING -o enp1s0 -j MASQUERADE; ip6tables-nft -D FORWARD -i wg0 -j ACCEPT; ip6tables-nft -t nat -D POSTROUTING -o enp1s0 -j MASQUERADE

          [Peer]
          PublicKey = 0VR1TY2uJignKcMLKSZnWDEE7kLTiVESwDN+Qtr+h30=
          PresharedKey = eNatQ21xnWXyMRYz75EVl93lKrLwm71csbIdH2fEgzc=
          AllowedIPs = 192.168.159.0/24,fdab:ec02:68de:3f47::/64

          [Peer]
          PublicKey = GZetWiYtanijNBjLBuUiAUqRrZg5UET0US/dWSy+VA4=
          PresharedKey = jyloWYz4YMGcIH4m/mqkaPue0t+1CO0xXPL4MHueLz4=
          AllowedIPs = 192.168.159.0/24,fdab:ec02:68de:3f47::/64
    - path: /var/home/core/cron/onstart.sh
      user:
        name: core
      mode: 0744
      overwrite: true
      contents:
        inline: |
          #!/bin/bash -x
          DATE=`date -Iseconds`
          echo "$DATE: Hello onstart, $*" >>/var/home/core/cron.log
          for i in fail2ban nano podman-compose qemu-guest-agent redhat-lsb-core tree tmux wireguard-tools; do
            sudo rpm-ostree install --allow-inactive $i || true
          done
          # TODO aanno: reboot if something has really been installed (systemctl reboot)
    - path: /var/home/core/cron/daily.sh
      user:
        name: core
      mode: 0744
      overwrite: true
      contents:
        inline: |
          #!/bin/bash -x
          DATE=`date -Iseconds`
          echo "$DATE: Hello daily, $*" >>/var/home/core/cron.log
    - path: /var/home/core/cron/weekly.sh
      user:
        name: core
      mode: 0744
      overwrite: true
      contents:
        inline: |
          #!/bin/bash -x
          DATE=`date -Iseconds`
          echo "$DATE: Hello weekly, $*" >>/var/home/core/cron.log
    - path: /etc/systemd/zram-generator.conf
      mode: 0644
      overwrite: true
      contents:
        inline: |
          # This config file enables a /dev/zram0 device with the default settings
          [zram0]
    - path: /etc/zincati/config.d/51-rollout-wariness.toml
      overwrite: true
      contents:
        inline: |
          [identity]
          rollout_wariness = 0.6
    - path: /etc/zincati/config.d/55-updates-strategy.toml
      overwrite: true
      contents:
        inline: |
          [updates]
          strategy = "periodic"
          [[updates.periodic.window]]
          days = [ "Sun", "Mon" ]
          start_time = "03:15"
          length_minutes = 60
  disks:
    # libvirt: /dev/vda, netcup: /dev/sda
    - device: ${ROOT_DISK}
      # The name of the primary block device. In virtio-based setups, this is
      # likely `/dev/vda`. Elsewhere, it's likely `/dev/sda`.
      # We do not want to wipe the partition table since this is the primary
      # device.
      wipe_table: false
      partitions:
        - label: root
          number: 4
          resize: true
          size_mib: ${ROOT_PART_SIZE}
        - label: backup
          number: 5
          size_mib: ${BACKUP_PART_SIZE}
          # Start at 5G so that we leave enough space for the root partition.
          # See the important NOTE below about this.
          # start_mib: ${ROOT_PART_SIZE}
        - label: var
          number: 6
          size_mib: 0
          # We assign a descriptive label to the partition. This is important
          # for referring to it in a device-agnostic way in other parts of the
          # configuration.
  luks:
    - name: luks-backup
      label: luks-backup
      device: /dev/disk/by-partlabel/backup
      discard: true
      wipe_volume: false
      key_file:
        local: key.luks
      clevis:
        # using tpm2 hinders a second ignition
        tpm2: false
    - name: luks-var
      label: luks-var
      device: /dev/disk/by-partlabel/var
      discard: true
      wipe_volume: false
      key_file:
        local: key.luks
      clevis:
        # using tpm2 hinders a second ignition
        tpm2: false
  filesystems:
    - path: /var/backup
      # device: /dev/disk/by-partlabel/backup
      device: /dev/mapper/luks-backup
      format: xfs
      wipe_filesystem: false
      with_mount_unit: true
    - path: /var
      # device: /dev/disk/by-partlabel/var
      device: /dev/mapper/luks-var
      wipe_filesystem: false
      # We can select the filesystem we'd like.
      format: xfs
      # Ask FCCT to generate a mount unit for us so that this filesystem gets
      # mounted in the real root.
      with_mount_unit: true
